// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductCategory {
  id             Int                    @id @default(autoincrement())
  seoTitle       String                 @default("")
  seoDescription String                 @default("")
  name           String
  slug           String                 @unique
  description    String                 @db.Text
  image          String
  products       CategoriesOnProducts[]
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
}

model Product {
  id              Int                    @id @default(autoincrement())
  seoTitle        String                 @default("")
  seoDescription  String                 @default("")
  producer        String
  name            String
  description     String?                @db.Text
  specification   String?                @db.Text
  price           Decimal?
  images          Json                   @default("[]")
  categories      CategoriesOnProducts[]
  productFeatures Json                   @default("[]")
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
}

model CategoriesOnProducts {
  productId  Int
  categoryId Int

  product  Product         @relation(fields: [productId], references: [id])
  category ProductCategory @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}
